class Solution {
    public boolean is_anagram(int[] frqp,int[] frqs)
    {
        for(int i=0;i<26;i++)
        {
            if(frqp[i]!=frqs[i])
            {
                return false;
            }
        }
        return true;
    }
    public List<Integer> findAnagrams(String s, String p) {
        int[] frqp=new int[26];
        int[] frqs=new int[26];
        ArrayList<Integer> ans=new ArrayList<>();
        int n=p.length();
        int m=s.length();
        if(n>m)
        {
            return ans;
        }
        for(int i=0;i<26;i++)
        {
            frqp[i]=0;
            frqs[i]=0;
        }
        for(int i=0;i<p.length();i++)
        {
            frqp[p.charAt(i)-'a']+=1;
            frqs[s.charAt(i)-'a']+=1;
        }
        int left=0;
        int right=n;
        while(right<=m)
        {
            if(is_anagram(frqp,frqs))
            {
                ans.add(left);
            }
            frqs[s.charAt(left)-'a']-=1;
            if(right<m)
            {
                frqs[s.charAt(right)-'a']+=1;
            }
            left++;
            right++;
        }
        return ans;
    }
}
